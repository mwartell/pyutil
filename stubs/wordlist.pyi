from typing import Any, Callable, Dict, List, Tuple

def _parse_words(seq: List[str], line: str) -> None: ...
def _parse_wonderland(seq: List[str], line: str) -> None: ...
def _parse_surnames(seq: List[str], line: str) -> None: ...
ListParser = Tuple[str, Callable[[List[str], str], None]]
_SOURCES: Dict[str, ListParser]
_STOP_WORDS: List[str]

class WordList(List[str]):
    def _load_source(self, source: str) -> None: ...
    _myrand: Any = ...
    source: Any = ...
    def __init__(self, source: str=...) -> None: ...
    def shuffle(self) -> None: ...
    def _partition(self, partitions: int) -> List[List[str]]: ...
    def dict(self) -> Dict[str, str]: ...
